# Set theme on HA start
- alias: Set theme at startup
  initial_state: on
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data:
      name: slate
      mode: dark

# Check  to see if zigbee sensors are offline
- alias: Zigbee Sensors Offline
  description: ""
  use_blueprint:
    path: Tahutipai/zigbee_zwave_notify_when_battery_devices_have_fallen_offline.yaml
    input:
      actions:
        - service: notify.mobile_app_sean_pixel
          data:
            title: "Zigbee Sensors Offline"
            message: "The following sensors are offline: {{sensors}}"

- alias: Recast Dashboard
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: "/1"
    - platform: state
      entity_id: input_boolean.living_room_occupied
      to: "on"
    #- platform: template
    #  value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'DashCast' }}"
  condition: 
    - condition: template
      value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'Spotify' }}"
    - condition: template
      value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'DashCast' }}"
    - condition: state
      entity_id: input_boolean.bedtime_sean
      state: "off"
    - condition: state
      entity_id: input_boolean.living_room_occupied
      state: "on"
    - condition: state
      entity_id: group.family
      state: home
    - condition: template
      value_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}" # NOT condition
    - condition: template
      value_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}" # NOT condition
    - condition: template
      value_template: "{{ not is_state('media_player.nvidia_shield_pro', 'playing') }}" # NOT condition
    - condition: template
      value_template: "{{ not is_state('media_player.nvidia_shield_pro', 'paused') }}"
  action:
    - delay:
        seconds: 5
    - service: script.cast_ha_nesthub

- alias: Turn off Dashboard Cast
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      to: playing
    - platform: state
      entity_id: input_boolean.living_room_occupied
      to: "off"
      for:
        minutes: 10
    - platform: state
      entity_id: media_player.nvidia_shield_pro
      to: playing
    - platform: state
      entity_id: group.family
      to: not_home
    - platform: state
      entity_id: input_boolean.bedtime_sean
      to: "on"
    - platform: state
      entity_id: input_boolean.bedtime_emily
      to: "on"
  action:
    - service: media_player.turn_off
      data:
        entity_id: media_player.nesthub


# Turn on air fresh after cats use box
- alias: Turn on air fresh
  initial_state: on
  trigger:
    - platform: state
      entity_id: vacuum.kitty_throne_litter_box
      attribute: status
      to: 'Cat Sensor Timing'
  condition:
    - condition: state
      entity_id: group.family
      state: "home"
  action:
    - service: switch.turn_on
      entity_id: switch.air_freshener
    - delay:
        minutes: "30"
    - service: switch.turn_off
      entity_id: switch.air_freshener

- alias: Restart Litter Robot
  description: If litter robot is in error for at least 30 minutes, the switch will toggle power to reset robot
  trigger:
    - platform: state
      entity_id:
        - vacuum.kitty_throne_litter_box
      from: "Ready"
      attribute: status
      for:
        hours: 0
        minutes: 30
        seconds: 0
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: vacuum.kitty_throne_litter_box
          attribute: status
          state: "Cat Sensor Timing"
        - condition: state
          entity_id: vacuum.kitty_throne_litter_box
          attribute: status
          state: "Drawer Full"
        - condition: state
          entity_id: vacuum.kitty_throne_litter_box
          attribute: status
          state: "Drawer Full At Startup"
  action:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.litter_robot
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.litter_robot
  mode: single

# Turn on Vacuum three times a day to clean litter
- alias: Vacuum Sunroom
  initial_state: on
  trigger:
    - platform: time
      at: "06:30:00"
    - platform: time
      at: "12:00:00"
    - platform: time
      at: "16:30:00"
  condition: []
  action:
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'playing') }}"
    - service: script.vac_clean_sunroom

# Vacuum hardwood floors three times a week
- alias: Vacuum Hardwood Floors
  initial_state: on
  trigger:
    - platform: time
      at: "14:00:00"
  condition:
    - condition: time
      weekday:
        - mon
        - wed
        - fri
  action:
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'playing') }}"
    - service: script.vac_clean_multiroom


# Garbage Day notifications
- alias: Garbage Day
  initial_state: on
  trigger:
    - platform: time
      at: "18:30:00"
  condition:
    condition: time
    weekday:
      - sun
  action:
    - service: notify.notify
      data:
        message: ""
        data:
          image: "http://192.168.1.185:8123/local/images/garbage-day.jpg"
        title: ""
#    - service: notify.shield
#      data:
#        message: ""
#        title: ""
#        data:
#          duration: 7
#          fontsize: small
#          position: bottom-right
#          transparency: 100%
#          color: black
#          interrupt: 0
#          image:
#            url: "http://192.168.1.185:8123/local/images/garbage-day.jpg"
    - service: media_player.volume_set
      data:
        entity_id: media_player.nesthub
        volume_level: .99
    - delay:
        seconds: 1
    - service: media_player.play_media
      data:
        entity_id: media_player.whole_house
        media_content_id: "http://192.168.1.185:8123/local/audio/garbage-day.mp3"
        media_content_type: audio/mp3
    - service: media_player.volume_set
      data:
        entity_id: media_player.nesthub
        volume_level: .6

# Shitter Full notifications
- alias: Shitter Full
  initial_state: on
  trigger:
    - platform: numeric_state
      entity_id: sensor.kitty_throne_waste_drawer
      above: 95
  action:
    - service: notify.notify
      data:
        message: ""
        data:
          image: "http://192.168.1.185:8123/local/images/shitter.png"
        title: ""
#    - service: notify.shield
#      data:
#        message: ""
#        title: ""
#        data:
#          duration: 7
#          fontsize: small
#          position: bottom-right
#          transparency: 100%
#          color: black
#          interrupt: 0
#          image:
#            url: "http://192.168.1.185:8123/local/images/shitter.png"

# Vac is stuck
- alias: Vacuum Error Jeeves
  initial_state: on
  trigger:
    - platform: state
      entity_id: vacuum.roborock_vacuum_a08
      to: "error"
  action:
    - service: notify.notify
      data:
        message: "Jeeves is stuck. Please help him!"
        title: "Vacuum Alert"

# Vac is stuck
- alias: Vacuum Error Rosie
  initial_state: on
  trigger:
    - platform: state
      entity_id: vacuum.rosie
      to: "error"
  action:
    - service: notify.notify
      data:
        message: "Rosie is stuck. Please help her!"
        title: "Vacuum Alert"
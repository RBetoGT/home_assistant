# Lights back to full after media stops
- alias: "Media player stopped"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      from: "playing"
      to: "idle"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      from: "playing"
      to: "idle"
    - platform: state
      entity_id: media_player.shield
      from: "playing"
      to: "idle"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 15
    - service: light.turn_on
      data_template:
        entity_id: light.cabinet_lights
        brightness_pct: 100
        kelvin: 5400
        transition: 15
    - service: switch.turn_on
      data_template:
        entity_id: switch.bias_lighting
    - delay:
        seconds: 1
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 15

# Lights back to full after media stops
- alias: "Media player stopped unavailable"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      from: "playing"
      to: "unavailable"
    - platform: state
      entity_id: media_player.shield
      from: "playing"
      to: "unavailable"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      from: "playing"
      to: "unavailable"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 15
    - service: light.turn_on
      data_template:
        entity_id: light.cabinet_lights
        brightness_pct: 100
        kelvin: 5400
        transition: 15
    - service: switch.turn_on
      data_template:
        entity_id: switch.bias_lighting
    - delay:
        seconds: 1
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 15

# Lights turn off while media is playing
- alias: "Media player playing"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      to: "playing"
      from: "idle"
    - platform: state
      entity_id: media_player.shield
      to: "playing"
      from: "idle"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      to: "playing"
      from: "idle"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room
        transition: 4
    - service: light.turn_off
      data:
        entity_id: light.cabinet_lights
        transition: 6
    - service: switch.turn_off
      data_template:
        entity_id: switch.bias_lighting

# Lights turn off while media is playing
- alias: "Media player playing unavailable"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      to: "playing"
    - platform: state
      entity_id: media_player.shield
      to: "playing"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      to: "playing"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room
        transition: 4
    - service: light.turn_off
      data:
        entity_id: light.cabinet_lights
        transition: 6
    - service: switch.turn_off
      data_template:
        entity_id: switch.bias_lighting

# Lights dim when media is paused
- alias: "Media player paused"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      from: "playing"
      to: "paused"
    - platform: state
      entity_id: media_player.shield
      from: "playing"
      to: "paused"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      from: "playing"
      to: "paused"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    - service: light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 33
        transition: 4
    - service: light.turn_on
      data_template:
        entity_id: light.cabinet_lights
        brightness_pct: 50
        kelvin: 5400
        transition: 4
    - delay:
        seconds: 1
    - service: light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 33
        transition: 4

# Lights turn off when media is unpaused
- alias: "Media player unpaused"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      from: "paused"
      to: "playing"
    - platform: state
      entity_id: media_player.shield
      from: "paused"
      to: "playing"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      from: "paused"
      to: "playing"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    service: light.turn_off
    data:
      entity_id: light.living_room

# Lights dim to full going from paused to idle
- alias: "Media player pause to idle"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      from: "paused"
      to: "idle"
    - platform: state
      entity_id: media_player.shield
      from: "paused"
      to: "idle"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      from: "paused"
      to: "idle"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10
    - service: light.turn_on
      data_template:
        entity_id: light.cabinet_lights
        brightness_pct: 100
        kelvin: 5400
        transition: 10
    - service: switch.turn_on
      data_template:
        entity_id: switch.bias_lighting
    - delay:
        seconds: 1
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10

# Lights dim to full going from paused to idle
- alias: "Media player pause to unavailable"
  initial_state: on
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      from: "paused"
      to: "unavailable"
    - platform: state
      entity_id: media_player.shield
      from: "paused"
      to: "unavailable"
    - platform: state
      entity_id: media_player.plex_plex_for_android_tv_bravia_vh1
      from: "paused"
      to: "unavailable"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: media_player.nvidia_shield_pro
          attribute: source
          state: "Spotify"
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10
    - service: light.turn_on
      data_template:
        entity_id: light.cabinet_lights
        brightness_pct: 100
        kelvin: 5400
        transition: 10
    - service: switch.turn_on
      data_template:
        entity_id: switch.bias_lighting
    - delay:
        seconds: 1
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10

################
##### ROKU #####
################

# Lights turn off while roku media is playing
- alias: "Roku player playing"
  initial_state: on
  trigger:
    - platform: template
      value_template: >
        {% set src = state_attr('media_player.living_room_tv', 'source') %}
        {{ src in ["Netflix","HDMI 1 (ARC)","Prime Video","YouTube","Pluto TV - It's Free TV"] }}
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room
        transition: 2

- alias: "Roku player stopped"
  initial_state: on
  trigger:
    - platform: template
      value_template: >
        {% set src = state_attr('media_player.living_room_tv', 'source') %}
        {{ src in ['Roku','Home'] }}
    - platform: state
      entity_id: media_player.living_room_tv
      to: "standby"
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10
    - delay:
        seconds: 1
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10

# Bias Lighting Off
- alias: "Bias Lights stopped unavailable"
  initial_state: on
  trigger:
    - platform: template
      value_template: >
        {% set src = state_attr('media_player.living_room_tv', 'source') %}
        {{ src in ['Roku','Home'] }}
    - platform: state
      entity_id: media_player.living_room_tv
      to: "standby"
  action:
    - service: switch.turn_off
      entity_id: switch.bias_lighting

# Lights dim while steamlink is playing
- alias: "Steamlink playing"
  initial_state: on
  trigger:
    - platform: template
      value_template: >
        {% set app = state_attr('media_player.living_room_tv', 'app_id') %}
        {{ app in ['tvinput.hdmi1'] }}
  condition:
    - condition: state
      entity_id: light.living_room
      state: "on"
  action:
    - service: switch.turn_on
      entity_id: switch.bias_lighting
